{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","EventGenre.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Event","state","event","showDetails","handleShowDetails","setState","this","props","className","summary","location","start","dateTime","onClick","id","description","Component","EventList","events","map","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","locations","suggestions","showSuggestions","infoText","handleInputChanged","value","target","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","nbrOfEvents","errMessage","mockData","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getAccessToken","localStorage","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","code","axios","results","authUrl","data","href","getToken","encodeCode","encodeURIComponent","access_token","setItem","getEvents","NProgress","navigator","onLine","done","JSON","parse","startsWith","token","url","stringify","EventGenre","useState","setData","useEffect","getData","genre","split","includes","name","COLORS","console","log","height","width","cx","cy","labelLine","label","percent","toFixed","outerRadius","fill","dataKey","entry","index","App","selectedLocation","eventCount","filteredEvents","slice","number","city","shift","filterEvents","amountEvents","mounted","response","numberOfEvents","margin","top","right","bottom","left","strokeDasharray","allowDecimals","cursor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.61e0f7eb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n    state = {\n        event: {},\n        showDetails: false\n    };\n\n    handleShowDetails = () => {\n        this.setState({ showDetails: !this.state.showDetails });\n    };\n\n    render() {\n        const { event } = this.props;\n        const { showDetails } = this.state;\n\n        return (\n            <div className=\"event\">\n                <div className=\"event-container\">\n\n                    <p className=\"event-title\">{event.summary}</p>\n                    <p className=\"event-location\">{event.location}</p>\n                    <p className=\"event-date\">{event.start.dateTime}</p>\n                    <button className=\"event-container-button\" onClick={() => this.handleShowDetails()}>\n                        {showDetails ? \"Hide Details\" : \"Show Details\"}\n                    </button>\n\n                    {showDetails && (\n                        <div className=\"event-details\" id=\"eventDetails\">\n                            <p className=\"event-description\">{event.description}</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Alert\">\n                <p className=\"alert-text\" style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'blue';\n    }\n}\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'red';\n    }\n}\n\nexport { InfoAlert, ErrorAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        locations: [],\n        suggestions: [],\n        showSuggestions: false,\n        infoText: ''\n    }\n\n    // added to \"load a list of events by default\"\n    componentDidMount() {\n        this.setState({ locations: this.props.locations });\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ showSuggestions: true });\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        if (suggestions.length === 0) {\n            this.setState({\n                query: value,\n                infoText: 'Sorry, City could not be found, please check and try again.',\n            });\n        } else {\n            return this.setState({\n                query: value,\n                suggestions,\n                infoText: ''\n            });\n        }\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n\n                <InfoAlert text={this.state.infoText} />\n\n                <input type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }} >\n                    {this.state.suggestions.map((suggestion) => (\n                        <li\n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n    state = {\n        nbrOfEvents: 32,\n        errMessage: ''\n    };\n\n    handleInputChanged = (event) => {\n        //const value = event.target.value;\n        //this.setState({ nbrOfEvents: value });\n        if (event.target.value > 0 && event.target.value < 33) {\n            this.setState({\n                nbrOfEvents: event.target.value,\n                errMessage: ''\n            })\n        }\n        else {\n            return this.setState({\n                nbrOfEvents: '',\n                errMessage: 'Please enter a number between 1 and 32.'\n            })\n        }\n        this.props.updateEvents('', event.target.value);\n    };\n\n    render() {\n        return (\n            <div className=\"NumberOfEvents\">\n                <label>\n                    Show max. Events:\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"NumberOfEventsInput\"\n                    value={this.state.nbrOfEvents}\n                    onChange={this.handleInputChanged}\n                />\n                <ErrorAlert text={this.state.errMessage} />\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        }\n\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-21T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-21T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        }\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200522T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-22T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        }\n\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200523T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjNUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-23T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-23T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        }\n\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200525T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjVUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-25T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-25T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        }\n\n    }\n\n];\n\nexport { mockData };\n","/**\n *\n * @param {*} events:\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nimport axios from 'axios';\nimport NProgress from 'nprogress';\nimport { mockData } from \"./mock-data\";\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nexport const extractEvents = (events) => {\n    var extractEvents = events.map((event) => event);\n    var oneEvent = [...new Set(extractEvents)];\n    return oneEvent;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                `https://jcu7sw52pi.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url`\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        `https://jcu7sw52pi.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (!navigator.onLine) {\n        const events = localStorage.getItem(\"lastEvents\");\n        NProgress.done();\n        return { events: JSON.parse(events).events, locations: extractLocations(JSON.parse(events).events) }; // this line (CF-code) throws an error: \"Uncaught (in promise) TypeError: Cannot read property 'events' of null\"\n    }\n\n    //if (window.location.href.startsWith(\"http://localhost:3000/\")) {\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        //return mockData;\n        return { events: mockData, locations: extractLocations(mockData) };\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = `https://jcu7sw52pi.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\n        const result = await axios.get(url);\n\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\n            localStorage.setItem('locations', JSON.stringify(locations));\n        }\n        NProgress.done();\n        //return result.data.events;\n        return { events: result.data.events, locations };\n\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\n\nconst EventGenre = ({ events }) => {\n    const [data, setData] = useState([]);\n    useEffect(() => { setData(() => getData()); }, [events]);\n\n    const getData = () => {\n        const genres = ['React', 'AngularJS', 'jQuery', 'Node', 'JavaScript'];\n        const data = genres.map((genre) => { //genreData\n            const value = events.filter(({ summary }) => summary.split('').includes(genre)).length; // with or witout blank?\n            return { name: genre, value };\n        });\n        return data;\n    };\n\n    const COLORS = ['#0099FF', '#00CC99', '#FFCC33', '#FF9933', '#9966CC'];\n\n    console.log(events);\n\n    return (\n        <ResponsiveContainer height={400} >\n            <PieChart width={400} height={400} >\n                <Pie\n                    data={data}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                >\n                    {\n                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} name={entry.name} />)\n                    }\n                </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n    );\n};\n\nexport default EventGenre;\n\n/*const { PieChart, Pie, Sector, Cell } = Recharts;\nconst data = [\n    { name: 'Group A', value: 400 },\n    { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 },\n    { name: 'Group D', value: 200 }];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nconst SimplePieChart = React.createClass({\n    render() {\n        return (\n            <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\n                <Pie\n                    data={data}\n                    cx={300}\n                    cy={200}\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                >\n                    {\n                        data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]} />)\n                    }\n                </Pie>\n            </PieChart>\n        );\n    }\n})\n\nlet ReactDOM;\nlet EventGenre;\n\nReactDOM.render(\n    <SimplePieChart />,\n    document.getElementById('container')\n); */","import React, { Component } from 'react';\nimport './App.css';\nimport \"./nprogress.css\";\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport { InfoAlert } from './Alert';\nimport { ErrorAlert } from './Alert'\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, /* PieChart, Pie, Sector, Cell */\n} from 'recharts';\nimport EventGenre from './EventGenre';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    NumberOfEvents: 32,\n    selectedLocation: 'all',\n    infoText: '',\n    //genres: []\n  };\n\n  //filter the results based on location\n  updateEvents = (location, eventCount) => {\n    const { selectedLocation, nbrOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all') ?\n          events : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, nbrOfEvents);\n        this.setState({\n          events: filteredEvents,\n          selectedLocation: location\n        });\n      });\n    }\n    else {\n      getEvents().then((events) => {\n        const locationEvents = (selectedLocation === 'all') ?\n          events : events.filter((event) => event.location === selectedLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          nbrOfEvents: eventCount\n        });\n      });\n    }\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const gridData = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(' ').shift()\n      console.log(locations);\n\n      return { city, number };\n    })\n    return gridData;\n  };\n\n  /* eventGenre = ({ events }) => {\n    const [genreData, setGenreData] = useState([]);\n    useEffect(() => {\n      setGenreData(() => getGenreData());\n    }, [events]);\n\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n    const getGenreData = () => {\n      const genres = ['React', 'AngularJS', 'jQuery', 'Node', 'JavaScript'];\n      const genreData = genres.map((genre) => {\n        const value = events.filter(({ summary }) => summary.split('').includes(genre)).length;\n        return { name: genre, value };\n      });\n\n      return genreData;\n    }\n  }; */\n\n  filterEvents = () => {\n    const { locations, events } = this.state;\n    const result = locations.map((location) => {\n      const amountEvents = events.filter((event) => event.location === location).length;\n      const city = location.split(',').shift();\n      return { amountEvents, city };\n    })\n    return result;\n  }\n\n  async componentDidMount() {\n    this.mounted = true;\n\n    if (!navigator.onLine) {\n      this.setState({\n        infoText: 'No internet connenction found. Tha data shown is loaded from the cash.'\n      });\n    }\n\n    await getEvents().then((response) => {\n      //console.log(events);\n      if (this.mounted) {\n        this.setState({ events: response.events, locations: response.locations });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const { locations, numberOfEvents } = this.state;\n    //const { summary } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>What's up next ...? </h1>\n        <h2>Choose your City</h2>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <InfoAlert className=\"info-text\" text={this.state.infoText} />\n        <NumberOfEvents nbrOfEvents={this.state.result} updateEvents={this.updateEvents} />\n        <ErrorAlert text={this.state.errMessage} />\n        <h4>Events in each city</h4>\n        <ResponsiveContainer height={400} >\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 10, left: 10 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n\n          </ScatterChart>\n        </ResponsiveContainer>\n        <h4>Popularity of Genres</h4>\n        <EventGenre events={this.state.events} />\n        {/*<ResponsiveContainer height={400} >\n          <PieChart id=\"container\">\n            <Pie\n              genreData={genreData}\n              cx={200}\n              cy={200}\n              labelLine={false}\n              label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n              outerRadius={80}\n              fill=\"#8884d8\"\n              dataKey=\"value\"\n            >\n              {\n                genre.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} Name={entry.name} />)\n              }\n            </Pie>\n          </PieChart>\n            </ResponsiveContainer>*/}\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration'; // ANs version\n//import * as atatus from 'atatus-js'; // CF version differs from atatus\n/*import * as atatus from 'atatus-spa'; */\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/* added in exercise 4.6 continuous delivery */\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n//serviceWorkerRegistration.register();                                     // ANs version\n/*atatus.config('f83f753b07db491c8a72576f781d4c9b').install();*/\n\n//To check that Atatus has been integrated successfully, at the bottom of your “index.js” file.\n//atatus.notify(new Error('Test Atatus Setup'));\n\n/* added in early 4.x, 4.2? 4.3? */\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//To check that Atatus has been integrated successfully, at the bottom of your “index.js” file.\n//atatus.notify(new Error('Test Atatus Setup'));\n"],"sourceRoot":""}